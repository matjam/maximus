CC		= gcc
CXX		= gcc
AR		= ar
RANLIB		= ranlib
YACC		= yacc
SED		= sed
RM		= rm -f
MV		= mv -f
BSD_INSTALL	= install
UNAME		= uname

LDFLAGS		= -L.
OBJ_EXT		:= o
LIB_EXT		:= so
LIB_PREFIX	:= lib

-include	$(SRC)/vars_local.mk

#PLATFORM	:= $(strip $(shell $(UNAME) -s | $(SED) 'y/ABCDEFGHIJKLMNOPQRSTUVWXYZ/abcdefghijklmnopqrstuvwxyz/'))
#PREFIX		= /var/max

BIN		= $(PREFIX)/bin
ETC		= $(PREFIX)/etc
LIBEXEC		= $(PREFIX)/libexec
LIB		= $(PREFIX)/lib
STATIC_LIB	= $(SRC)/lib

H_DIRS		:= unix/include slib msgapi btree max prot mex
SO_DIRS		:= unix slib msgapi btree prot mex
LDFLAGS		+= $(foreach DIR, $(SO_DIRS), -L$(SRC)/$(DIR))
INCLUDES	:= -I. $(foreach DIR, $(H_DIRS), -I$(SRC)/$(DIR))
CXXFLAGS	:= $(CFLAGS) -fpermissive
LOADLIBES	= $(EXTRA_LOADLIBES) -lmax -lcompat -lcurses

include		$(SRC)/vars_$(PLATFORM).mk

LOADLIBES	+= $(OS_LIBS)
CPPFLAGS	= -DUNIX $(EXTRA_CPPFLAGS) $(INCLUDES) $(EXTRA_INCLUDES)
MDFLAGS		= -D__MAKEDEPEND__

ifneq (,$(findstring gcc,$(CC)))
include 	$(SRC)/vars_gcc.mk
endif

.PHONY:		top build_debug depend

top:		all

build_debug:
		@echo
		@echo "BUILD        = $(BUILD)"
		@echo "PREFIX       = $(PREFIX)"
		@echo "CC           = $(CC)"
		@echo "CXX          = $(CXX)"
		@echo "LD           = $(LD)"
		@echo "YACC         = $(YACC)"
		@echo "MAKEDEPEND   = $(MAKEDEPEND)"
		@echo
		@echo "CFLAGS       = $(CFLAGS)"
		@echo "CXXFLAGS     = $(CXXFLAGS)"
		@echo "CPPFLAGS     = $(CPPFLAGS)"
		@echo "LDFLAGS      = $(LDFLAGS)"
		@echo "LOADLIBES    = $(LOADLIBES)"
		@echo "YFLAGS       = $(YFLAGS)"
		@echo "PATH         = $(PATH)"
		@echo "DEPEND_FILES = $(DEPEND_FILES)"
		@echo

# Implicit rules for constructing *.c, *.h from yacc input
# under either bison or yacc. Assumes !yacc == bison.

%.h: %.y
ifneq (,$(findstring yacc,$(YACC)))
	$(YACC) -d $<
	$(MV) y.tab.h $@
	$(RM) y.tab.c
else
	$(YACC) -d $< -o $*.c
endif

%.c: %.y
ifneq (,$(findstring yacc,$(YACC)))
	$(YACC) $<
	$(MV) y.tab.c $@
else
	$(YACC) $< -o $@
endif

ifneq ($(strip $(BUILD)),RELEASE) 
ifneq ($(strip $(NO_DEPEND_RULE)),TRUE)
-include depend.mk 
depend depend.mk: $(SRC)/vars.mk
	@echo "Building dependencies.."
	@-touch depend.mk 
ifneq ($(MAKEDEPEND),) 
	@-[ "$(DEPEND_FILES)" ] && $(MAKEDEPEND) $(MDFLAGS) -I. $(CPPFLAGS) -f depend.mk $(DEPEND_FILES)
endif 
endif
endif

